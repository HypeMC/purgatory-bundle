<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="5.25.0@01a8eb06b9e9cc6cfb6a320bf9fb14331919d505">
  <file src="src/Cache/Configuration/CachedConfigurationLoader.php">
    <MixedInferredReturnType>
      <code><![CDATA[array]]></code>
    </MixedInferredReturnType>
    <MixedReturnStatement>
      <code><![CDATA[require $cache->getPath()]]></code>
    </MixedReturnStatement>
    <UnresolvableInclude>
      <code><![CDATA[require $cache->getPath()]]></code>
    </UnresolvableInclude>
  </file>
  <file src="src/Cache/ControllerMetadata/ControllerMetadataProvider.php">
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$method]]></code>
    </PossiblyUndefinedArrayOffset>
  </file>
  <file src="src/Cache/PropertyResolver/AssociationResolver.php">
    <InternalClass>
      <code><![CDATA[PropertyReadInfo::TYPE_METHOD]]></code>
      <code><![CDATA[PropertyReadInfo::TYPE_PROPERTY]]></code>
    </InternalClass>
    <InternalMethod>
      <code><![CDATA[getName]]></code>
      <code><![CDATA[getName]]></code>
      <code><![CDATA[getType]]></code>
    </InternalMethod>
  </file>
  <file src="src/Cache/PropertyResolver/MethodResolver.php">
    <InternalClass>
      <code><![CDATA[PropertyReadInfo::TYPE_METHOD]]></code>
    </InternalClass>
    <InternalMethod>
      <code><![CDATA[getName]]></code>
      <code><![CDATA[getType]]></code>
    </InternalMethod>
  </file>
  <file src="src/Command/DebugCommand.php">
    <InvalidArgument>
      <code><![CDATA[$params]]></code>
    </InvalidArgument>
    <TypeDoesNotContainType>
      <code><![CDATA[Kernel::MAJOR_VERSION === 6]]></code>
      <code><![CDATA[Kernel::MAJOR_VERSION === 6]]></code>
    </TypeDoesNotContainType>
  </file>
  <file src="src/DependencyInjection/PurgatoryExtension.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[static function (ChildDefinition $definition, PurgeOn $attribute, \ReflectionClass|\ReflectionMethod $reflection): void {
                $definition->addTag(
                    name: 'purgatory2.purge_on',
                    attributes: [
                        'class' => $reflection instanceof \ReflectionMethod ? $reflection->class : $reflection->name,
                    ],
                );
            }]]></code>
    </ArgumentTypeCoercion>
  </file>
  <file src="src/Doctrine/DBAL/PurgatoryConnection.php">
    <DuplicateClass>
      <code><![CDATA[PurgatoryConnection]]></code>
    </DuplicateClass>
  </file>
</files>
